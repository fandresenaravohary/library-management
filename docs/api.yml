openapi: 3.0.3
info:
 title: Library API
 version: 1.0.0
 description: STD22058
servers:
 - url: https://library.com
paths:
 /books:
    get:
      summary: Get all books
      description: The returned books are ordered by updated datetime.
      operationId: getBooks
      parameters:
        - in: query
          name: bookName
          description: Filter return books by given name
          required: false
          schema:
            type: string
        - in: query
          name: start
          description: Filter books by start date
          required: false
          schema:
            type: string
            format: date
        - in: query
          name: end
          description: Filter books by end date
          required: false
          schema:
            type: string
            format: date
      responses:
        200:
          description: The list of filtered books
          content:
            application/json:
              schema:
                type: array
                items:
                 $ref: '#/components/schemas/Book'
    put:
      summary: Create or update a list of books
      operationId: crupdateBooks
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/Book'
      responses:
        200:
          description: The list of created or updated books
          content:
            application/json:
              schema:
                type: array
                items:
                 $ref: '#/components/schemas/Book'
 /authors:
    get:
      summary: Get all authors
      operationId: getAuthors
      parameters:
        - in: query
          name: authorName
          description: Filter return authors by given name
          required: false
          schema:
            type: string
      responses:
        200:
          description: The list of filtered authors
          content:
            application/json:
              schema:
                type: array
                items:
                 $ref: '#/components/schemas/Author'
    put:
      summary: Create or update a list of authors
      operationId: crupdateAuthors
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/Author'
      responses:
        200:
          description: The list of created or updated authors
          content:
            application/json:
              schema:
                type: array
                items:
                 $ref: '#/components/schemas/Author'
    delete:
      summary: Delete a list of authors
      operationId: deleteAuthors
      parameters:
        - in: query
          name: authorId
          description: Ids of authors to be deleted
          required: true
          schema:
            type: array
            items:
              type: string
      responses:
        200:
          description: The list of deleted authors
          content:
            application/json:
              schema:
                type: array
                items:
                 $ref: '#/components/schemas/Author'
components:
 schemas:
    Book:
      type: object
      properties:
        id:
          type: string
        bookName:
          type: string
        author:
          type: string
        pageNumbers:
          type: integer
        topic:
          type: string
          enum:
            - ROMANCE
            - COMEDY
            - OTHER
        releaseDate:
          type: string
          format: date
    Author:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        sex:
          type: string
          enum:
            - M
            - F